pipeline {
    agent any
    stages {
        stage('Create output directory') {
            steps {
                sh "mkdir -p /work/jenkins/data/$BUILD_ID"
                sh "chmod 644 /work/jenkins/data/test.txt"
            }        
        }
        stage('Run vdjbase pipeline') {
            steps {
                script {
                    def selected_projects = params['projects'].split(',')
                    def pipeline_jobs = [:]
                    def project = selected_projects[i]
                    def output_dir = '/work/jenkins/data/$BUILD_ID/$project'
                    for (i=0; i < selected_projects.length; i++) {
                        pipeline_jobs["$project"] = {
                            node {
                                stage("$project") {
                                    sh "mkdir -p $output_dir"
                                    sh "chmod 644 $output_dir"
                                    sh "echo '$project' >> /work/jenkins/data/test.txt"
                                }
                            }
                        }
                    }
                    parallel pipeline_jobs
                }
            }
        }
    }
    post {
        always {
            emailext (body: 'A Test EMail', subject: 'Test', to: 'boazfr@gmail.com')
            slackSend (color: '#FF0000', message: 'test')
        }
    }
}


def notifyBuild(String buildStatus) {
    
    emailext (body: 'A Test EMail', subject: 'Test', to: 'boazfr@gmail.com')
    
    // build status of null means successful
    buildStatus =  buildStatus ?: 'SUCCESSFUL'
    
    // Default values
    def colorName = 'RED'
    def colorCode = '#FF0000'
    def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
    def summary = "${subject} (${env.BUILD_URL})"
    
    // Override default values based on build status
    if (buildStatus == 'STARTED') {
        color = 'YELLOW'
        colorCode = '#FFFF00'
    } else if (buildStatus == 'SUCCESSFUL') {
        color = 'GREEN'
        colorCode = '#00FF00'
    } else {
        color = 'RED'
        colorCode = '#FF0000'
    }
    
    // Send notifications
    slackSend (color: colorCode, message: buildStatus)
}
